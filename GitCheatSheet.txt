GIT Training Document
GIT: Git is the world’s most popular software version control System just like SVN and zookeeper. All developers and Fortune 500 companies use it for collaboration.
Prerequisite:
1.	Open your developer account in https://www.github.com 
2.	Create a new public repository.
3.	Note down the repository URL you will need it for pushing and cloning.

Local pc:
1. Create a project folder like GitTraining in your C or D drive.
2. Open Gitbash
3.Migrate to  GitTraining 
         cd d:   to go to D drive
         cd GitTraining  to go to GitTraining
         cd ..   to come out of a folder
4.Initialise the GitTraining Folder
> git init

5.Add 2 files in it and write your code in it
>touch file1.txt
>touch file2.txt

6.Checking the status of your folder means which files are not committed means saved to be pushed later.
>git status

7.Adding the files in staging area
>git add .
>git add --all

8.Comitting the files
>git commit –m “Initial commit”

9.Checking the history of my Git Work
>git log

10.Branches are used for development purpose where we don’t want to risk our code.
Branch will contain exact copy of the master 
>git branch Siddharth

11.Switch to Branch
>git checkout Siddharth

12.Create a file3.txt in it. It will not be visible in master folder. But it will be present in branch
>touch file3.txt

13.Now do whatever files you want to add in this folder but before leaving commit everything.
>git add .
>git commit –m “Siddharth Initial Commit”

14.Now after checking everything you want to merge it with master folder. So first you have to go to master branch. After merging you don’t need to commit it. 
>git checkout master
>git merge Siddharth

15. You must have kept the URL with you .You will need it now.Its time to push the code

16.Set the proxy for corporate environment
>git config --global http.proxy http://proxyuser:proxypwd@proxy.cognizant.com:6050

unsetting earlier proxies
git config --global --unset-all http.proxy

getting current proxies
git config --global --get-all http.proxy

17.Set the URL
>git remote add origin https://github.com/sid28gunner/gitcheck.git

18.Push the code in repository
> git push –f origin master

Pulling the code from repository -----> Go to the master folder
> git pull

19.Cloning from the repository
> git clone <url>

20.Forgetting all proxies set 
>git config --global --unset-all http.proxy

21.Removing files
>git rm -r *
>git rm <filename>

22.For adding empty repositories use .gitignore files.

23.Git patching
$git diff>mypatch.patch
$git diff --cached>mypatch.patch
$git diff --cached --binary>mypatch.patch
$git apply mypatch.patch

23.Revert and Reset
$ git revert <hash code for commit>
$ git reset --hard <hash code for commit>

24.Git command for increasing buffer size
$ git config http.postBuffer 524288000

25.For SSL certificate related issues
$GIT_SSL_NO_VERIFY=true git clone https://soumik8.ghosh8%40cognizant.com@developer.us2.oraclecloud.com/developer38089-ctspaasdomain/s/developer38089-ctspaasdomain_fleetmanagement_12354/scm/fleetmanagement.git

For a single repo making ssl false

git config http.sslVerify false

For all repo i.e making ssl globally false

git config --global http.sslVerify false
